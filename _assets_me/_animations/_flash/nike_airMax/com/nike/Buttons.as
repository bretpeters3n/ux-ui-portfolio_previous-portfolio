package com.nike  {	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.events.Event;	import com.greensock.TweenLite;	import com.greensock.plugins.BlurFilterPlugin;	import com.greensock.plugins.ColorMatrixFilterPlugin;	import com.greensock.plugins.TweenPlugin;	import com.greensock.plugins.EndArrayPlugin;	TweenPlugin.activate([BlurFilterPlugin,EndArrayPlugin,ColorMatrixFilterPlugin]);	import com.greensock.easing.Linear;	import com.nike.shoes.Shoes;	import com.nike.shoes.Shoe;		public class Buttons extends MovieClip {				public var buttons_ary:Array = [];		private var _num:int = 0;		public var currentIndex:int = 3;		public var oldBtn:MovieClip;		private var isBlazer:Boolean = false;		private var blazerIndex:int;		public function Buttons() {			buttons_ary = [btn1,btn2,btn3,btn4];						var item:MovieClip;			var n:int = 0;			for each (var mc in buttons_ary)			{				item = MovieClip(mc);				item.index = n;				item.alpha = 0;				if(n != 3){					item.addEventListener(MouseEvent.MOUSE_OVER, onRollover);				}				n++;			}			TweenLite.to(buttons_ary[currentIndex]._selected, .4, {alpha:1});			oldBtn = buttons_ary[currentIndex];		}		public function init(_shoesAry:Array):void {			var item:MovieClip;			var n:int = 0;			for each (var mc in buttons_ary)			{				item = MovieClip(mc)				var shoes:Shoes = new Shoes(_shoesAry[n]);				var shoe:Shoe = new Shoe();				shoe = shoes.selectedShoe;								shoe.scaleX = .265;				shoe.scaleY = .265;				item.shoe.addChild(shoe);								var shoePieces:int = shoe.shoePieces.length;				for (var i = 0; i<shoePieces; i++){					TweenLite.to(shoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:shoe._combination4[i], amount:1,brightness:1.5, contrast:1.3},delay:.5});				}								n++;			}		}		public function bringInButtons():void {			var d:Number = .4;			var item:MovieClip;			for each (var mc in buttons_ary)			{				d +=  .03;				item = MovieClip(mc);				TweenLite.from(item, .2, {y:item.y + item.height,blurFilter:{blurY:5},delay:d, onStart:restoreAlpha, onStartParams:[item], ease:Linear.easeIn});			}		}		private function restoreAlpha(mc:MovieClip):void		{			mc.alpha = 1;			mc.visible = true;		}		public function changeColors(n:int):void {			var item:MovieClip;			var l:int =0;			for each (var mc in buttons_ary)			{				item = MovieClip(mc);				var shoe:Shoe = item.shoe.getChildAt(0);				trace("lll"+l);								l++;				var shoePieces:int = shoe.shoePieces.length;				var ary:Array = shoe.getSelectedColor(n);				for (var i = 0; i<shoePieces; i++){					TweenLite.to(shoe.shoePieces[i], .2, {colorMatrixFilter:{colorize:ary[i], amount:1,brightness:1.5, contrast:1.3}});				}							}								}				private function onRollover(event:MouseEvent):void {			event.currentTarget.removeEventListener(MouseEvent.MOUSE_OVER, onRollover);			oldBtn.addEventListener(MouseEvent.MOUSE_OVER, onRollover);			TweenLite.to(oldBtn._selected, .4, {alpha:0});			TweenLite.to(event.currentTarget._selected, .4, {alpha:1});			this.currentIndex = event.currentTarget.index;			this.dispatchEvent(new Event("changeShoe", true));			oldBtn = MovieClip(event.currentTarget);		}	}	}