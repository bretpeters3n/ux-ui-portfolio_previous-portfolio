package com.nike{	import flash.events.Event;	import flash.text.TextField	import com.nike.shoes.*;	import com.greensock.TweenLite;	import com.greensock.plugins.ColorMatrixFilterPlugin;	import com.greensock.plugins.BlurFilterPlugin;	import com.greensock.plugins.TweenPlugin;	import com.greensock.plugins.EndArrayPlugin;	import com.greensock.easing.Linear;	TweenPlugin.activate([EndArrayPlugin,BlurFilterPlugin, ColorMatrixFilterPlugin]);	import flash.display.MovieClip;	import flash.events.MouseEvent;	public class ShoeView extends MovieClip	{		private var _frontShoe:Shoe = new Shoe();		private var _backShoe:Shoe = new Shoe();		private var _shoeName:MovieClip;		private var _currentIndex:int =0;		private var _nameText:MovieClip;		private var shoes_ary:Array = [];		private var activeShoe:Shoe = new Shoe();		private var firstTime:Boolean = true;		private var colorIndex:int = 2;		private var shoeY:Number = 104;		private var shoeX:Number = 144;		private var isBlazer:Boolean = false;		private var blazerIndex:int;		public function ShoeView()		{			// constructor code		}				public function init(_shoeContainer:MovieClip,_shoes:Array, _sName:MovieClip=null):void		{			_nameText = _sName;			_nameText.x = 150;			shoes_ary = _shoes;			var shoes:Shoes = new Shoes(shoes_ary[_currentIndex]);			var shoes2:Shoes = new Shoes(shoes_ary[_currentIndex]);			_frontShoe = shoes.selectedShoe;			_backShoe = shoes2.selectedShoe;						this.addChild(_frontShoe);			this.addChild(_backShoe);			_frontShoe.alpha = 0;			_frontShoe.x =_backShoe.x = shoeX;			_frontShoe.y =_backShoe.y = shoeY;			_nameText._txt.text = _frontShoe._shoeName;			TweenLite.from(_backShoe,.2,{scaleX:.1,scaleY:.1,blurFilter:{blurX:3,blurY:5}, ease:Linear.easeIn});			initShoes();		}		public function get currentIndex():int {			return _currentIndex;		}		private function initShoes():void		{			var shoePieces:int = _frontShoe.shoePieces.length;			for (var i = 0; i<shoePieces; i++)			{trace(i, shoePieces);				if(i == shoePieces-1) {					TweenLite.to(_frontShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_frontShoe._combination1[i], amount:1,brightness:1.4,contrast:1.3},delay:.5, onComplete:explode, onCompleteParams:[_backShoe, playColor2,.2]});				}				else {					TweenLite.to(_frontShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_frontShoe._combination1[i], amount:1,brightness:1.4, contrast:1.3},delay:.5});				}				TweenLite.to(_frontShoe, .1,{alpha:1,delay:.3});				//TweenLite.to(_backShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_backShoe._combination2[i], amount:1,brightness:1.5, contrast:1.3}});			}		}		private function explode(mc:Shoe,funct:Function, d:Number = 0):void {						var shoePieces:int = mc.shoePieces.length;			for (var i = 0; i<shoePieces; i++)			{				d +=  .02;				if(i == shoePieces-1) {					TweenLite.to(mc.shoePieces[i], .25, {x:mc._endX[i],y:mc._endY[i],alpha:0,scaleX:2, scaleY:2,delay:d,blurFilter:{blurX:3,blurY:6},  ease:Linear.easeIn, onComplete:funct,onCompleteParams:[mc]})				}				else {					TweenLite.to(mc.shoePieces[i], .25, {x:mc._endX[i],y:mc._endY[i],alpha:0,scaleX:2, scaleY:2,delay:d,blurFilter:{blurX:3,blurY:6},  ease:Linear.easeIn});				}							}		}		private function playColor2(mc:Shoe){			this.removeChild(mc);			var shoes:Shoes = new Shoes(shoes_ary[_currentIndex]);			_backShoe = shoes.selectedShoe;			this.addChildAt(_backShoe,0);			_backShoe.x = shoeX;			_backShoe.y = shoeY;			var shoePieces:int = mc.shoePieces.length;			for (var i = 0; i<shoePieces; i++)			{			if(i == shoePieces-1) {					TweenLite.to(_backShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_backShoe._combination2[i], amount:1,brightness:1.4, contrast:1.3}, onComplete:explode, onCompleteParams:[_frontShoe,playColor3, .2]});				}				else {					TweenLite.to(_backShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_backShoe._combination2[i], amount:1,brightness:1.4, contrast:1.3}});				}			}								}		private function playColor3(mc:Shoe){			this.removeChild(mc);			var shoes:Shoes = new Shoes(shoes_ary[_currentIndex]);			_frontShoe = shoes.selectedShoe;			this.addChildAt(_frontShoe,0);			_frontShoe.x = shoeX;			_frontShoe.y = shoeY;			var shoePieces:int = mc.shoePieces.length;			for (var i = 0; i<shoePieces; i++)			{			if(i == shoePieces-1) {					TweenLite.to(_frontShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_frontShoe._combination4[i], amount:1,brightness:1.4, contrast:1.3},overwrite:0, onComplete:explode, onCompleteParams:[_backShoe,playColor4, .2]});				}				else {					TweenLite.to(_frontShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_frontShoe._combination4[i], amount:1,brightness:1.4, contrast:1.3},overwrite:0});				}			}		}		private function playColor4(mc:Shoe){			trace(_currentIndex);			_currentIndex++;			if(_currentIndex <= 3){						this.removeChild(mc);			var shoes:Shoes = new Shoes(shoes_ary[_currentIndex]);			_backShoe = shoes.selectedShoe;			this.addChildAt(_backShoe,0);			_backShoe.scaleX = .1;			_backShoe.scaleY = .1;			_backShoe.x = shoeX;			_backShoe.y = shoeY;			var shoePieces:int = _backShoe.shoePieces.length;			for (var i = 0; i<shoePieces; i++)			{			if(i == shoePieces-1) {					TweenLite.to(_backShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_backShoe._combination1[i], amount:1,brightness:1.4, contrast:1.3}});				}				else {					TweenLite.to(_backShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_backShoe._combination1[i], amount:1,brightness:1.4, contrast:1.3}});				}			}			TweenLite.to(_frontShoe, .25,{scaleX:3,scaleY:3,x:500,y:300,delay:.5,blurFilter:{blurX:3,blurY:5}, ease:Linear.easeOut});			TweenLite.to(_backShoe, .25,{scaleX:1,scaleY:1,delay:.6, ease:Linear.easeOut, onComplete:removeFrontShoe});			}			else {				this.dispatchEvent(new Event("playEndFrame", true));				shoeY = 74;				TweenLite.to(_frontShoe, .25,{y:shoeY,ease:Linear.easeOut});				TweenLite.to(_backShoe, .25,{y:shoeY,ease:Linear.easeOut});				_currentIndex--;								//_activeShoe = new Shoe();				//_activeShoe = _frontShoe;			}		}		private function removeFrontShoe():void {			trace("removeFrontShoe");			this.removeChild(_frontShoe);			var shoes:Shoes = new Shoes(shoes_ary[_currentIndex]);			_frontShoe = shoes.selectedShoe;						this.addChildAt(_frontShoe,0);			_frontShoe.x = shoeX;			_frontShoe.y = shoeY;			var shoePieces:int = _frontShoe.shoePieces.length;			_nameText._txt.text = _frontShoe._shoeName;			for (var i = 0; i<shoePieces; i++)			{			if(i == shoePieces-1) {					TweenLite.to(_frontShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_frontShoe._combination1[i], amount:1,brightness:1.4, contrast:1.3}, onComplete:playColor2, onCompleteParams:[_backShoe]});				}				else {					TweenLite.to(_frontShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:_frontShoe._combination1[i], amount:1,brightness:1.4, contrast:1.3}});				}			}		}		public function changeColors(n:int):void {			colorIndex = n;			if(firstTime) {				activeShoe = _frontShoe;			}			else {				activeShoe = _backShoe;			}						var shoePieces:int = activeShoe.shoePieces.length;			var ary:Array = activeShoe.getSelectedColor(n);			for (var i = 0; i<shoePieces; i++)			{					TweenLite.to(activeShoe.shoePieces[i], .3, {colorMatrixFilter:{colorize:ary[i], amount:1,brightness:1.4, contrast:1.3}});			}		}		public function changeShoe(n:int):void {			trace("changeShoe");			firstTime = false;			this.removeChild(_backShoe);			_currentIndex = n;			var shoes:Shoes = new Shoes(shoes_ary[_currentIndex]);			_backShoe = shoes.selectedShoe;			this.addChildAt(_backShoe,0);			_backShoe.scaleX = .1;			_backShoe.scaleY = .1;			_backShoe.x = shoeX;			_backShoe.y = shoeY;			var shoePieces:int = _backShoe.shoePieces.length;			var ary:Array = _backShoe.getSelectedColor(colorIndex);			for (var i = 0; i<shoePieces; i++)			{					TweenLite.to(_backShoe.shoePieces[i], .05, {colorMatrixFilter:{colorize:ary[i], amount:1,brightness:1.4, contrast:1.3}});			}			TweenLite.to(_frontShoe, .2,{scaleX:3,scaleY:3,x:500,y:300,blurFilter:{blurX:3,blurY:5},  ease:Linear.easeOut});			TweenLite.to(_backShoe, .2,{scaleX:1,scaleY:1,delay:.1, ease:Linear.easeOut, onComplete:makeActive});					}		private function makeActive():void {			this.removeChild(_frontShoe);			var shoes:Shoes = new Shoes(shoes_ary[_currentIndex]);			_frontShoe = shoes.selectedShoe;			this.addChildAt(_frontShoe,0);			_frontShoe.x = shoeX;			_frontShoe.y = shoeY;						var ary:Array = _frontShoe.getSelectedColor(colorIndex);			var shoePieces:int = _frontShoe.shoePieces.length;			_nameText._txt.text = _frontShoe._shoeName;			for (var i = 0; i<shoePieces; i++)			{				TweenLite.to(_frontShoe.shoePieces[i], .01, {colorMatrixFilter:{colorize:ary[i], amount:1,brightness:1.4, contrast:1.3}});			}					}	}}